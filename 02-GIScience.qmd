# GIScience and GIS software
This week’s lecture introduced you to foundational concepts associated with GIScience and GIS software, with particular emphasis on the representation of spatial data and sample design. Out of all our foundational concepts you will come across in the next four weeks, this is probably the most substantial to get to grips with and has both significant theoretical and practical aspects to its learning. The practical component of the week puts some of these learnings into practice, starting with a short digitisation excercise followed by a simple visualisation of London's population over time.

## Lecture slides {#slides-w01}
The slides for this week's lecture can be downloaded here: [\[Link\]]({{< var slides.week02 >}})

## Reading list {#reading-w02}
#### Essential readings { .unnumbered}
- Longley, P. *et al.* 2015. Geographic Information Science & Systems, **Chapter 2**: *The Nature of Geographic Data*. [[Link]](https://ucl.rl.talis.com/link?url=https%3A%2F%2Fapp.knovel.com%2Fhotlink%2Ftoc%2Fid%3AkpGISSE001%2Fgeographic-information-science%3Fkpromoter%3Dmarc&sig=e437927b963cc591dcb65491eccdd3869cc31aef80e1443cb2ba12d8f3bb031a)
- Longley, P. *et al.* 2015. Geographic Information Science & Systems, **Chapter 3**: *Representing Geography*. [[Link]](https://ucl.rl.talis.com/link?url=https%3A%2F%2Fapp.knovel.com%2Fhotlink%2Ftoc%2Fid%3AkpGISSE001%2Fgeographic-information-science%3Fkpromoter%3Dmarc&sig=e437927b963cc591dcb65491eccdd3869cc31aef80e1443cb2ba12d8f3bb031a)
- Longley, P. *et al.* 2015. Geographic Information Science & Systems, **Chapter 7**: *Geographic Data Modeling*. [[Link]](https://ucl.rl.talis.com/link?url=https%3A%2F%2Fapp.knovel.com%2Fhotlink%2Ftoc%2Fid%3AkpGISSE001%2Fgeographic-information-science%3Fkpromoter%3Dmarc&sig=e437927b963cc591dcb65491eccdd3869cc31aef80e1443cb2ba12d8f3bb031a)

#### Suggested readings {-}
- Goodchild, M. and Haining, R. 2005. GIS and spatial data analysis: Converging perspectives. *Papers in Regional Science* 83(1): 363–385. [[Link]](https://doi.org/10.1007/s10110-003-0190-y)
- Schurr, C., Müller, M. and Imhof, N. 2020. Who makes geographical knowledge? The gender of Geography’s gatekeepers. *The Professional Geographer* 72(3): 317-331. [[Link]](https://doi.org/10.1080/00330124.2020.1744169)
- Yuan, M. 2001. Representing complex geographic phenomena in GIS. *Cartography and Geographic Information Science* 28(2): 83-96. [[Link]](https://doi.org/10.1559/152304001782173718)

## Simple digitisation of spatial features
To get spatial features in a digital form, they need to be digitised. Let’s take a quick look in this first part of the practical at a straight-forward example of digitising the river Thames in London.

```{r}
#| label: fig-digitise
#| echo: False 
#| cache: True
#| fig-cap: "The river Thames. [[Enlarge image]](https://jtvandijk.github.io/GEOG0030/images/w02/river-thames.png){target='_blank'}"
knitr::include_graphics('images/w02/river-thames.png')
```

We are going to use a very simple online tool that allows us to create digital data and export the data we create as raw files:

1. Head to [geojson.io](http://geojson.io/#map=12/51.5170/-0.1030).
2. In the bottom left-hand corner, select *Satellite Streets* as your map option.
3. Next, click on the `Draw Linestring` tool which you can find on the right hand side of the screen. You can hover over the icons to get the names of each tool.
4. Now digitise the river Thames. Simply click from a starting point on the left- or right-hand side of the map, and digitise the river.
5. Once you are done, double-click your final point to end your line.
6. You can  click on the line and select *Info* in the pop-up screen to find out how long the line is. 
7. You can export your data using the *Save* menu.

## Population change in London
The second part of this practical will introduces you to **attribute joins** followed by creating a [choropleth map](https://en.wikipedia.org/wiki/Choropleth_map). You will be using different types of *joins* throughout this practical, this module in general, and probably the rest of your career, so it is incredibly important that you understand how these work.

::: { .callout-warning}
The datasets you will create in this practical will be used in next week's practical, so make sure to follow every step and save your data carefully.
:::

When using spatial data, there is generally a very specific workflow that you will need to go through and, believe it or not, the majority of this is not actually focused on analysing your data. One of the most often-quoted GIS-related unreferenced 'fact' is that anyone working with spatial data will spend 80% of their time simply finding, retrieving, managing and processing the data before any analysis can be done.

One of the reasons behind this need for a substantial amount of processing is that the data you often need to use is almost never  in the format that you require for analysis. For example, for our investigation, there is not a 'ready-made' spatial population dataset (i.e. population `shapefile`) we can download to explore population change across England:

```{r 02}
#| label: fig-google-shp
#| echo: False
#| cache: True
#| fig-cap: "A quick Google search shows that finding a shapefile of England's population is not straightforward. [[Enlarge image]](https://jtvandijk.github.io/GEOG0030/images/w02/datasearch.png){target='_blank'}"
knitr::include_graphics('images/w02/datasearch.png')
```

Instead, we need to go and find the raw datasets and create the data layers that we want. As a result, before beginning any spatial analysis project, it is best-practice to think through what end product you will ultimately need for your analysis.

A typical spatial analysis workflow usually looks something like this:

| Step        | Action      |
| :----       | :----------- |
| `identify`  | Think about the data you need to complete your analysis. |
| `find`      | Find the data that matches your requirements. |
| `download`  | Store the data on your computer in the right folder. |
| `clean`     | Assess whether the data needs pre-processing before moving to QGIS or R. |
| `load`      | Load the `cleaned` data into QGIS, R, or software of choice. |
| `process`   | Prepare the data so that they are ready for analysis (e.g. joining, aggregating). |
| `analyse`   | Execute the actual analysis that you set out to do. |
| `visualise` | Create graphs and maps where appropriate. |

As you can see, the analysis and visualisation parts only make up the last steps of the workflow and instead, the workflow is very top-heavy with data management. 

::: { .callout-note}
Very often in GIS-related courses you will be given pre-processed datasets. Because data management is an essential part of your workflow, we will clean (the majority of) our data from the get-go. This will help you understand the processes that you will need to go through in the future as you search for and download your own data as well as deal with the data first-hand before loading it into our GIS software.
:::

### Setting the scene {#w02-scene}
In this part of the practical, we will investigate how the population in London has changed over time. Understanding population change - over time and space - is spatial analysis at its most fundamental. We can understand a lot just from where population is growing or decreasing, including thinking through the impacts of these changes on the provision of housing, education, health and transport infrastructure. 

Today we will look at population in London in the Census years of 2011 and 2021 at the **Lower Super Output Area** scale that we can also use within our future analysis projects. 

::: { .callout-note}
We will use the population dataset we create today to *normalise* other datasets in the module. Why? When we record events created by humans, there is often a population bias: simply, more people in an area will by probability lead to a higher occurrence of said event, such as crime. We will look at this in greater detail next week.
:::

### Finding data {#w02-finding}
In the UK, finding authoritative data on population and *Administrative Geography* boundaries is increasingly straight-forward. Over the last decade, the UK government has opened up many of its datasets as part of an **Open Data** precedent that began in 2010 with the creation of [data.gov.uk](https://www.data.gov.uk) and the Open Government Licence (the terms and conditions for using data).

::: { .callout-note}
[Data.gov.uk](https://www.data.gov.uk) is the UK government’s central database that contains open data that the central government, local authorities and public bodies publish. This includes, for example, aggregated census and health data – and even government spending. In addition to this central database, there are other authoritative databases run by the government and/or respective public bodies that contain either a specific type of data (e.g. census data, crime data) or a specific collection of datasets (e.g. health data from the NHS, data about London). Some portals are less up-to-date than others, so it is wise to double-check with the ‘originators’ of the data to see if there are more recent versions.
::: 

For our practical, we will access data from two authoritative data portals:

- For our administrative boundaries, we will download the **spatial** data from the *Open Geography Portal*. 
- For our population data, we will download **attribute** data directly from the *Office of National Statistics (ONS)*.

### Housekeeping {#w01-housekeeping}
Before we download our data, it is important to establish an organised file systems that we will use throughout the module. Create a `GEOG0030` folder in your `Documents` folder on your computer and within your `GEOG0030` folder, create the following subfolders: 

| Folder name | Purpose      |
| :----       | :----------- |
| `raw`       | To store all your raw data files that have not yet been cleaned and processed. |
| `data`      | To store data files that have been cleaned and processed. |
| `output`    | To store all your final output data files and maps.

### Downloading spatial data {#w02-download-spatial}
We will start by downloading the administrative geography boundaries for England and Wales:

1. Navigate to the *Open Geography Portal*: [[Link]](https://geoportal.statistics.gov.uk/)
2. In the main menu go to **Boundaries** -> **Census Boundaries ** -> **Lower Layer Super Output Areas** -> **2011 Boundaries**.
3. Click on **LSOA (Dec 2011) Boundaries Generalised Clipped BGC EW V3**.
4. Click on **Download** -> **Download GeoPackage**.

Repeat the above process to also download the 2021 LSOA boundaries: **Lower Layer Super Output Areas (2021) Boundaries EW BGC**. Make sure you download the **Generalised (20m)** version.

::: { .callout-warning}
Administrative geographies are a way of dividing the country into smaller sub-divisions or areas that correspond with the area of responsibility of local authorities and government bodies. These administrative sub-divisions and their associated geography have several important uses, including assigning electoral constituencies and serving as a mechanism for collecting census data. These geographies are updated as populations evolve and as a result the boundaries of the administrative geographies are subject to either periodic or occasional change. This is why we need to download both 2011 and 2021 boundaries. More details on the administrative geographies of the UK can be found on the website of the [Office for National Statistics](https://www.ons.gov.uk/methodology/geography/ukgeographies/administrativegeography).
:::

Now open your `GEOG0030/data/raw/` folder and create a new folder called `boundaries`. Rename the two files you just downloaded to `LSOA2011.gpkg` and `LSOA2021.gpkg`, respectively, and copy these into your `boundaries` folder.

::: { .callout-note}
You may have used spatial data before and noticed that we did not download a collection of files known as a `shapefile` but a `geopackage` instead. Whilst `shapefiles` are still being used, and you will most likely come across them at some point in    your career, the more modern, more portable, and open-source `geopackage` should be your spatial data format of choice where possible. Have a look at this article on *towardsdatascience.com* for an excellent explanation on why one should use `geopackage` files instead of `shapefiles`: [[Link]](https://towardsdatascience.com/why-you-need-to-use-geopackage-files-instead-of-shapefile-or-geojson-7cb24fe56416)
:::

### Downloading population data {#w02-download-population}
For our population data, we will use the 2011 and 2021 Census population counts that are made available by the ONS through [Nomis](https://www.nomisweb.co.uk/).

1. Navigate to the *Nomis* portal: [[Link]](https://www.nomisweb.co.uk/)
2. In the main menu go to **Census** -> **2011 Census** -> **Lower Layer Super Output Areas** -> **2011 Boundaries**.
3. Click on **Key Statistics**.
4. Click on **KS101EW - Usual resident population**.
5. Click on **Query data** on the left-hand side of the window.
6. Select **Geography** and set **2011 super output areas - lower layer** to **All**.
7. Click on **Download data**. 
8. Once the data is ready for download, download the file to your computer.

To get the 2011 Census population counts, you should:

1. In the main menu of the *Nomis* portal go to **Census** -> **2011 Census** -> **Lower Layer Super Output Areas** -> **2021 Boundaries**.
2. Click on **Topic Summaries**.
3. Click on **TS007A - Age by five-year age bands**.
4. Click on **Query data** on the left-hand side of the window.
5. Select **Geography** and set **2021 super output areas - lower layer** to **All**.\
6. Click on **Download data**. 
7. Once the data is ready for download, download the file to your computer.

In your `GEOG0030/data/raw/` folder, now create a new folder called `population` and copy the two Excel files to the newly created `population` folder. Rename the files you downloaded to: `LSOA2011_population.xlsx` and `LSOA2021_population.xlsx`, respectively.

### Cleaning data {#w02-cleaning}
When you open up any of the LSOA spreadsheets in Excel, you will notice that some additional rows of information are contained at the top of each of these files. This extra information will confuse QGIS and we therefore need to do a bit of data cleaning. To reduce the chance of errors in later stages, we will also save the data in `csv` format.

::: {.callout-tip}
`csv` stands for comma (or character) separated values. A `csv` file can be thought of as stripped-down Excel spreadsheet in which every column of data is separated by a comma. If you open a `csv` file within Excel, however, it will look "normal". The advantage of using `csv` files is that it (should) make it easier to read data into QGIS and R as less things can go wrong.
:::

#### London population in 2011
Open the `LSOA2011_population.xlsx` file in Excel. We have two main columns: one with identifying information that distinguishes each area from one another and one with population counts. In addition, there are some less informative rows at the top of the spreadsheet. 

Looking at this we need to take two steps. First, we need to remove the top rows that we do not need. Second, we need to spread the information in the first column into two columns. Currently, this columns contains unique area codes as well as unique area names. However, to be able to effectively link our population data to our spatial data, the codes are much more reliable and much less likely to cause issues than the area names. Putting area codes and area names into separate columns will help us sorting this out.

1. Open a new Excel spreadsheet. From the `LSOA2011_population.xlsx` spreadsheet, copy over all cells from columns **A** to **B** and rows **9 to 4,651** into this new spreadsheet. Row 4,651 denotes the end of the *Greater London* areas which in some cases are kept at the top of the spreadsheet, depending on how the data are sorted.
2. Rename the columns in the new spreadsheet to `lsoa` and `pop2011`, respectively. 
3. Cut all the data from the `pop2011` column that is stored in column **B** and paste these into column **C**. You now should have a column *without* any data between the `lsoa` and `pop2011` columns.
4. Highlight the entire `lsoa` column and in the **Data** menu click on the **Text to Columns** menu button.

```{r}
#| label: fig-text-to-columns
#| echo: False 
#| cache: True
#| fig-cap: "Highlight the `lsoa` columns and find the **Text to Columns** menu option. Note that column **B** does not contain any data. [[Enlarge image]](https://jtvandijk.github.io/GEOG0030/images/w02/text-to-columns.png){target='_blank'}"
knitr::include_graphics('images/w02/text-to-columns.png')
```

::: { .callout-warning}
Note that the **Text to Columns** function might be elsewhere in the menu depending on your version of Excel and/or your operating system.
:::

4. In the **Text to Columns** menu, select the **Delimited** radio button and click **Next**.
5. Uncheck the checkbox for **Tab** and put `:` (colon) into the **Other** box. Click **Finish**. 
6. Change the name of the `lsoa` column to `lsoa11_code` and change the name of the new column to `lsoa11_name`.

```{r}
#| label: fig-almost-there
#| echo: False 
#| cache: True
#| fig-cap: "Your spreadsheet should now look something like this. [[Enlarge image]](https://jtvandijk.github.io/GEOG0030/images/w02/almost-there.png){target='_blank'}"
knitr::include_graphics('images/w02/almost-there.png')
```

7. One thing that might cause problems when we try to link the population data to the spatial data is that there are still spaces contained in the `lsoa11_code` column. This is not directly noticeable as these spaces are white space characters at the end of the LSOA codes without any other characters following it (i.e. [trailing spaces](https://stackoverflow.com/questions/22273233/what-is-meant-by-trailing-space-and-whats-the-difference-between-it-and-a-blank). This may seem trivial, but computer language is very precise so we need to remove these. We can do this by highlighting the entire `lsoa11_code` column and in the **Home** menu opting for **Replace** under the **Find & Select** menu.

```{r}
#| label: fig-find-replace
#| echo: False 
#| cache: True
#| fig-cap: "Accessing the **Replace** option. [[Enlarge image]](https://jtvandijk.github.io/GEOG0030/images/w02/find-replace.png){target='_blank'}"
knitr::include_graphics('images/w02/find-replace.png')
```

8. In the **Find what** box put in a singular `white space`, using the *spacebar* on your computer, keep the **Replace with** box empty, and click on **Replace all**. You should get a message that **4,642** replacements have been made. 
9. One further bit of formatting that you must do before saving your data is to format our population field. At the moment, you will see that there are commas separating the thousands within our values. If we leave these commas in our values, QGIS will read them as decimal points, creating decimal values of our population. There are many points at which we could resolve this issue, but the easiest point is now - we will strip our population values of the commas and set them to integer (whole numbers) values. To format the `pop2011` column, higlight the entire column and right-click on the `C` cell.  Click on **Format Cells** and set the Cells to **Number** with **0** decimal places. You should see that the commas are now removed from your population values.
10. Save your spreadsheet as a `csv` file into your `data` folder as `LSOA2011_population.csv`.

::: { .callout-tip}
After saving the file Excel might give you a warning along the lines of *Possible data loss*. You can safely ignore this message as the only 'information' you have lost is markup information (e.g. fonts, colours, items in bold, etc.) or formulas native to Excel (e.g. if you used Excel to calculate *means*, *medians*, etc.). In some cases you might also have options to choose what type of `csv` you would want to save the spreadsheet as. If so, opt for something along the lines of `CSV UTF-8 (Comma-delimited) (.csv)`. 
:::

::: { .callout-warning}
Depending on the language settings of your operation system (e.g. Windows, MacOS, Linux) and language settings, `csv` files might look different. It is always a good idea to check your `csv` file in a plain text editor (e.g. **Textedit** on MacOS or **Notepad** on Windows). In case you do not see commas (`,`), but semicolons (`;`) you can apply a quick and dirty fix to your data by *finding and replacing* every `;` with a `,` in the same that way we fixed our problematic `white space` characters in Excel.
:::

#### London population in 2021
Now the 2011 data is prepared, we can move to the 2021 data:

1. Open the `LSOA2021_population.xlsx` in Excel. You will notice that the file is formatted largely the same as the `LSOA2011_population.xlsx` file, although if you were to look closely you will notice that the London data are not at the top this time and that the number of top rows that we need to remove is not the same.
2. Copy over all cells from columns **A** to **B** and rows **6 to 35,678** into a new spreadsheet. Now **sort** the data on your `lsoa` column (use: **Data** -> **Sort**) and subsequently remove all data below row **4,507**. This procedure *should* put the London LSOAs at the top again.
3. Now carry out the same steps you used to clean the 2021 population file to clean the 2011 population file. Save the file as `csv` into your `data` folder as `LSOA2021_population.csv` with the following column names: `lsoa21_code`, `lsoa21_name`, and `pop2021`. 

::: { .callout-warning}
Whilst sorting our data based on the `lsoa` column is a  perfectly fine strategy this time around to effectively extract the London-based LSOAs, this does depend on the data and success is not guaranteed. Make sure to always double-check that you have all the data that you require and your approach actually worked before moving on.
:::

### Using QGIS to map the London population data

#### Setting up a project
We will now use QGIS to create population maps for the LSOAs in London for both years. To achieve this, we need to **join our table data to our spatial datasets** and then map our populations for our visual analysis. Because, as we have seen above, we have issues with the number of LSOAs and changes in boundaries between the two Censuses, we will not (for now) complete any quantitative analysis of these population changes - this would require significant additional processing that we do not have time for today. 

::: { .callout-note}
Data interoperability is a key issue that you will face in spatial analysis, particularly when it comes to Administrative Geographies. 
:::

1. Start **QGIS**.
2. Click on **Project** -> **New**. Save your project as `w2-pop-analysis`. Remember to save your work throughout the practical. 
3. Before we get started with adding data, we will first set the Coordinate Reference System of our Project. Click on **Project** -> **Properties -- CRS**. In the Filter box, type **British National Grid**. Select **OSGB 1936 / British National Grid - EPSG:27700** and click Apply. Click **OK**.

::: { .callout-note}
We will explain CRSs and using CRSs in GIS software in more detail next week.
:::

#### Adding layers
We will first focus on loading and joining the 2011 datasets. 

1. Click on **Layer** -> **Add Layer** -> **Add Vector Layer**.
2. With **File** as your source type, click on the small three dots button and navigate to your 2011 boundary files.
3. Here, we will select the `LSOA2011.gpkg` dataset. Highlight the file and click **Open**. Then click **Add**. You may need to close the box after adding the layer. The 2011 LSOA geography for England and Wales should now be loaded.

```{r}
#| label: fig-england-wales
#| echo: False 
#| cache: True
#| fig-cap: "2011 LSOAs for England and Wales. [[Enlarge image]](https://jtvandijk.github.io/GEOG0030/images/w02/england-wales.png){target='_blank'}"
knitr::include_graphics('images/w02/england-wales.png')
```

With the dataset loaded, we can now explore it in a little more detail. We
first want to check out the **Attribute Table** of our dataset to see if we can filter out only the London LSOAs.

4. Right-click on the `LSOA2011` layer and open the **Attribute Table** and look at how the attributes are stored and presented in the table. Explore the different buttons in the Attribute Table and see if you can figure out what they mean.
5. Now sort the **Attribute Table** on the **LSOA11CD** column so that all London-based LSOAs are at the top. Select the first **4,4642** rows.

::: { .callout-tip}
You can select the first row, scroll down to the last row related to *Westminster*, hold the `shift` button on your keyboard, and click on the last row related to *Westminster* to select all rows that we need in one go.
:::

```{r}
#| label: fig-select-london
#| echo: False 
#| cache: True
#| fig-width: 12
#| fig-cap: "All **4,4642** London LSOAs selected. [[Enlarge image]](https://jtvandijk.github.io/GEOG0030/images/w02/select-london.png){target='_blank'}"
knitr::include_graphics('images/w02/select-london.png')
```

6. Close the **Attribute Table**. Right-click on the `LSOA2011` layer and select **Export** -> **Save Selected Features As**. Set **Format** to `Geopackage` and click on the small three dots button next to **File name** and navigate to your `data/raw/boundaries` folder. Save the file as `LSOA2011_London.gpkg`.

```{r}
#| label: fig-export-london
#| echo: False 
#| cache: True
#| fig-width: 15
#| fig-cap: "Export the London LSOAs to a new file. [[Enlarge image]](https://jtvandijk.github.io/GEOG0030/images/w02/export-london.png){target='_blank'}"
knitr::include_graphics('images/w02/export-london.png')
```

7. You can now untick the `LSOA2011` containing all the LSOAs for England and Wales. Right-click on the `LSOA2011_London` layer and click on **Zoom to Layer(s)**. 
